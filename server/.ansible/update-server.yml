- name: Velach Bot Server Update
  hosts: admin-access
  vars:
    DIST_BINARY_DIR: "{{ lookup('ansible.builtin.env', 'GITHUB_WORKSPACE') }}/server/dist-binary"
    COMMIT_HASH: "{{ lookup('ansible.builtin.env', 'GITHUB_SHA') }}"
  tasks:
    - name: Stop server
      ansible.builtin.systemd:
        name: velach_bot_server.service
        state: stopped

    - name: Backup DB
      environment:
        VELACH_BOT_DROPBOX_TOKEN: "{{ DROPBOX_TOKEN }}"
        VELACH_BOT_DB_DATABASE: "{{ DB_NAME }}"
        VELACH_BOT_DB_USER: "{{ DB_USER }}"
        VELACH_BOT_DB_PASSWORD: "{{ DB_PASSWORD }}"
      ansible.builtin.command:
        chdir: "{{ APP_DIR }}"
        cmd: "./cli --backup-db pre-deploy-dump-{{ COMMIT_HASH }}"

    - name: Copy executables
      block:
        - name: Create bot directory
          ansible.builtin.file:
            path: "{{ APP_DIR }}"
            owner: "{{ OS_USER }}"
            group: "{{ OS_GROUP }}"
            state: directory
            recurse: true

        - name: Copy server executable
          ansible.builtin.copy:
            src: "{{ DIST_BINARY_DIR }}/main"
            dest: "{{ APP_DIR }}"
            owner: "{{ OS_USER }}"
            group: "{{ OS_GROUP }}"
            mode: "755"

        - name: Copy CLI executable
          ansible.builtin.copy:
            src: "{{ DIST_BINARY_DIR }}/cli"
            dest: "{{ APP_DIR }}"
            owner: "{{ OS_USER }}"
            group: "{{ OS_GROUP }}"
            mode: "755"

      - name: Apply DB migrations
        environment:
          VELACH_BOT_DB_DATABASE: "{{ DB_NAME }}"
          VELACH_BOT_DB_USER: "{{ DB_USER }}"
          VELACH_BOT_DB_PASSWORD: "{{ DB_PASSWORD }}"
        ansible.builtin.command:
          chdir: "{{ APP_DIR }}"
          cmd: "./cli --apply-migrations"

      - name: Start server
        ansible.builtin.systemd:
          name: velach_bot_server.service
          state: started
